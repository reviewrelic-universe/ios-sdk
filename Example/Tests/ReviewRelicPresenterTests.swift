//
//  ReviewRelicPresenterTests.swift
//  ReviewRelic
//
//  Created by Raheel Sadiq on 27/03/2021.
//  Copyright (c) 2021 CocoaPods. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ReviewRelic
import XCTest

class ReviewRelicPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: ReviewRelicPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupReviewRelicPresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupReviewRelicPresenter()
    {
        sut = ReviewRelicPresenter()
    }
    
    // MARK: Test doubles
    
    class ReviewRelicDisplayLogicSpy: ReviewRelicDisplayLogic {
        var displayFailureDataCalled = false
        func displayFailureData() {
            displayFailureDataCalled = true
        }
        
        
        var displayDataCalled = false
        
        func displayData(viewModel: ReviewRelicModels.ViewModel){
            displayDataCalled = true
        }
    }
    
    // MARK: Tests
    func testDataPresentaiton() {
        guard
            let data = ReviewRelicTestsData.StarBasedRatingJson.data(using: .utf8),
            let response = try? JSONDecoder().decode(ReviewRelicModels.Response.self, from: data) else {
           
            XCTAssertTrue(false,  "Settings data encoding failed")
            return
        }
    
        let spy = ReviewRelicDisplayLogicSpy()
        sut.viewController = spy

        sut.presentData(response: response)
        // Then
        XCTAssertTrue(spy.displayDataCalled, "Display data not called")
    }
}
